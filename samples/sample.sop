//Sophia sample code

class A extends B {
	int a;
	bool b;
	string c;
	func<int,bool->int> d;
	list(2 # list(3 # int)) e;
	list(int, bool, func<int,bool->int>) f;

	def A(a:int, b:string) {
		super(b);
		string a;
		this.a = a;
	}

	def void foo(r:int) {
		print("hi");
	}
}

class B {
	def B(b:string) {
		print(b);
	}

	def int bar(a:bool, b:int) {
        if(a == true) {
            return 1;
        }
        else {
            return 0;
        }
    }

	def func<bool,int->int> bar() {
        int r;
        func<bool,int->int> myFptr;
        list(first:int, func<bool,int->int>, bool) myList;
        list(2 # func<bool,int->int>) myList2;
        list(2 # list(3 # int)) anotherList;
        func<bool,int->int> fptr;
        myFptr = this.bar;
        myList = [2, myFptr, true];
        print(myList[0]);
		print(myList.first);
        r = myList[1].invoke();

        myList2 = [myFptr, myFptr];
        foreach(fptr in myList2) {
            fptr.invoke();
        }
        anotherList = [[1,2,3],[4,5,6]];
        {
            a = b = c[1].t() + 1 * r.t[1].invoke().b[1].e() + [2,[r.t[1].invoke(),r],4] + this.a;
            this.b(new R());
        }
        return myList2[0];
    }
}

class Main {
	def Main() {
	    A a;
		a = new A(2, "hello");
		this.a().invoke();
	}
}